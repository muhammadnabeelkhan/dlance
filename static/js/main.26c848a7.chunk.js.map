{"version":3,"sources":["Assets/images/l1.png","Assets/images/d1.png","Assets/images/d2.png","Assets/images/d3.png","Components/HeaderImage/index.js","Components/Title/index.js","Components/Card/index.js","Components/Services/index.js","Components/PricingHeading/index.js","Components/PricingCard/index.js","Components/Pricing/index.js","Components/MainBody/index.js","Components/Footer/index.js","Components/LandingPage/index.js","Components/Help/index.js","API/config.js","API/index.js","BlockChain/config.js","Redux/Actions/index.js","Components/Profile/index.js","Components/ViewJobCard/index.js","Components/Loader/index.js","Components/CreateJobCard/index.js","Components/Jobs/index.js","Components/MyJobs/index.js","Components/AboutUs/index.js","Components/NotifCard/index.js","Components/Notifications/index.js","Components/Form/index.js","Components/ListElements/index.js","Components/AppbarTop/index.js","Components/Spinner/index.js","Components/HomePage/index.js","Components/NavbarDrawer/index.js","Components/ResponsiveDrawer/index.js","Components/AuthCard/index.js","Components/SigninForm/index.js","Components/Dashboard/index.js","App.js","Redux/Reducers/reducer.js","Redux/Reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","headerImage","props","class","href","style","width","src","source","alt","Title","_onButtonClick","console","log","history","push","this","title","description","onClick","buttonText","className","marginTop","React","Component","withRouter","Card","image","Services","mappedCard","require","map","value","PricingHeading","PricingCard","sign","money","month","Pricing","MainBody","Footer","ListCard","xml","path","height","xmlns","d","fill","alter","copyright","Landingpage","HeaderImage","Logo","Help","_renderFreeLancer","color","fontSize","_renderEmployer","state","paddingLeft","paddingRight","fontWeight","URL","Api","data","endPoint","success","error","fetch","method","headers","body","JSON","stringify","then","response","json","result","catch","err","smart_contract_address","smart_contract_ABI","Actions","Signup","completed","failed","dispatch","type","content","Login","payload","userdata","Clear","Update_Metamask","accountNo","EditProfile","saveAddr","GetAllJobs","CreateJob","applyJob","GetAppliedJobs","startJob","completeJob","getAllNotifs","declineJob","acceptJob","markCompleteJob","Profile","_onChange","text","field","setState","prevState","userInfo","_toggleEditable","disabled","_updateProfile","first_name","last_name","email","username","account_type","Reducer","metamask_acc","status","ToastsStore","message","fluid","lg","sm","md","TextField","id","label","variant","onChange","e","target","Button","store","position","ToastsContainerPosition","BOTTOM_CENTER","connect","ViewJobCard","_enableMetaMask","web3","window","ethereum","alert","Web3","enable","eth","Contract","methods","employer","freelancer","amount","job_id","send","from","once","receipt","_onClickApply","freelancer_email","employer_email","jobDetails","category","toggleLoading","_onClickStart","_reloadJobs","_onClickComplete","_renderButtonSection","view","Paper","elevation","budget","duration","display","justifyContent","flexDirection","alignItems","marginRight","override","css","Loader","sizeUnit","size","loading","CreateJobCard","jobFields","_handleCreateJob","trim","toggleShow","placeholder","multiline","rowsMax","fullWidth","FormControl","InputLabel","Select","labelId","MenuItem","Jobs","_renderAlljobs","allJobs","job","index","_jobDetails","_toggleLoading","_renderCreateJobs","alljobs","show","length","textAlign","AboutUs","_renderDetails","NotifCard","_onMarkComplete","_onAccept","notif_id","_onDecline","_renderApprovalBtns","_renderMarkDoneBtn","Notifications","_getNotifs","Form","handleClick","open","handleClose","_renderContent","name","_onToggle","MyJobs","_renderJobButton","marginLeft","paddingTop","ListElements","List","paddingBottom","ListItem","button","ListItemIcon","ListItemText","primary","homeOPEN","Collapse","in","timeout","unmountOnExit","component","disablePadding","Divider","key","nested","clickFunction","withStyles","theme","root","background","drawer","breakpoints","up","flexShrink","appBar","menuButton","toolbar","mixins","drawerPaper","flexGrow","padding","spacing","unit","withTheme","classes","AppBar","backgroundColor","Toolbar","IconButton","aria-label","onClickEvent","Typography","noWrap","AwesomeComponent","textDecoration","cursor","_onSignOut","Spinner","Hidden","smUp","implementation","Drawer","container","Container","anchor","direction","openState","onClose","onCloseDrawer","paper","renderDrawer","xsDown","ResponsiveDrawer","mobileOpen","loaded","that","handleDrawerToggle","onButtonClick","_renderDrawerContents","_renderPageContent","inputheight","input","onsignout","CssBaseline","AuthCard","toggle","_setToggle","_handleKeyDown","onLogin","onSignup","_renderSignUp","signup_details","firstName","onChangeSignup","lastName","userName","password","confirmPassword","marginBottom","options","accountlist","accountType","option","_onSelect","_renderSignIn","login_details","onChangeLogin","onKeyDown","SigninForm","event","testEmail","test","loginData","ls","set","setTimeout","signupData","flag","SignIn","buttonsubmit","onEmail","onPassword","children","basename","exact","active","spinner","Dashboard","match","INITIAL_STATE","combineReducers","action","Boolean","location","hostname","persistConfig","storage","persistedReducer","persistReducer","reducer","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26c848a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/l1.7ad0f1af.png\";","module.exports = __webpack_public_path__ + \"static/media/d1.82692e7b.png\";","module.exports = __webpack_public_path__ + \"static/media/d2.467dff26.png\";","module.exports = __webpack_public_path__ + \"static/media/d3.dac9684d.png\";","import React from 'react';\n\nconst headerImage = (props) => \n{\nreturn(\n    <header class=\"site-header\">\n    <div class=\"container\">\n        <div class=\"site-header-inner\">\n            <div class=\"brand header-brand\">\n                <h1 class=\"m-0\">\n                    <a href=\"#\">\n                        <img  style={{width :\"70%\"}} class=\"header-logo-image\" src={props.source} alt=\"Logo\"/>\n                    </a>\n                </h1>\n            </div>\n        </div>\n    </div>\n</header>\n\n);\n\n}\n\nexport default headerImage; \n","import React from 'react';\nimport { connect } from 'react-redux';\n// import Actions from '../../Redux/Actions';\n\nimport { withRouter } from \"react-router\";\n\nclass Title extends React.Component\n{\n\tconstructor(props){\n\t\tsuper()\n\t}\n\n\n\t_onButtonClick = () => {\n\t\tconsole.log(this.props);\n\t\t\n\t\tthis.props.history.push('/dLance/signin')\n\t}\n\n\trender(){\n\n\n\t\treturn(\n\n\t\t\t<section class=\"hero\">\n\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t<div class=\"hero-inner\">\n\t\t\t\t\t\t\t\t<div class=\"hero-copy\">\n\t\t\t\t\t\t\t<h1 class=\"hero-title mt-0\">{this.props.title}</h1>\n\t\t\t\t\t\t\t<p class=\"hero-paragraph\">{this.props.description}</p>\n\t\t\t\t\t\t\t<div class=\"hero-cta\">\n\t\t\t\t\t\t\t\t<button class=\"button button-primary\" onClick = {this._onButtonClick}>{this.props.buttonText}</button>\n\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/* <div class=\"hero-figure anime-element\">\n\t\t\t\t\t\t\t\t\t<svg class=\"placeholder\" width=\"528\" height=\"396\" viewBox=\"0 0 528 396\">\n\t\t\t\t\t\t\t\t\t\t<rect width=\"528\" height=\"396\" style={{fill:\"transparent\"}} />\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-01\" data-rotation=\"45deg\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-02\" data-rotation=\"-45deg\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-03\" data-rotation=\"0deg\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-04\" data-rotation=\"-135deg\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-05\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-06\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-07\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-08\" data-rotation=\"-22deg\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-09\" data-rotation=\"-52deg\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"hero-figure-box hero-figure-box-10\" data-rotation=\"-50deg\"></div>\n\t\t\t\t\t\t\t\t</div> */}\n\n<div className=\"pricing-tables-wrap animated rotateIn delay-1s\" >\n                <div className=\"pricing-table\" style={{marginTop:'300px'}} >\n                   \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\n\t\t);\n\t}\n\n}\n\n// const mapStateToProps = ( state ) => {\n// \treturn state;\n// }\n\n// const mapDispatchToProps = ( dispatch ) => {\n// \treturn {\n// \t\t// set_name: ( name ) => Actions.set_name(name)\n// show_dashboard : () => dispatch(Actions.show_dashboard())\n\n// \t}\n// }\n\n// export default connect(mapStateToProps,mapDispatchToProps)(Title);\n\nexport default withRouter(Title)","import React from 'react';\n\nconst Card = (props) => {\n    return (\n        <div class=\"feature text-center is-revealing\">\n            <div class=\"feature-inner\">\n                <div class=\"feature-icon\">\n                    <img src={props.image} alt=\"Feature 06\" />\n                </div>\n    <h4 class=\"feature-title mt-24\">{props.title}</h4>\n    <p class=\"text-sm mb-0\">{props.description}</p>\n                </div>\n            </div>\n            );\n        }\n        \nexport default Card;","import React from 'react';\nimport Card from '../Card';\n\nconst Services = () => {\n   \nlet array = [{\n    title:'No third party',\ndescription:'Decentralized nature of the technology makes it a system that doesn’t rely on third-party companies; No third-party, no added risk.',\nimage :require(\"../../Assets/images/d1.png\")\n},\n\n\n{\n    title:'Zero Scams',\ndescription:'As the system runs on algorithms, there is no chance for people to scam you out of anything. No can utilize blockchain for their personal gains.' ,\nimage :require(\"../../Assets/images/d2.png\")},\n\n{\n    title:'Authentic Nature',\ndescription:'This nature of the system makes it a unique kind of system for every kind of people. And hackers will have a hard time cracking it.' ,\nimage :require(\"../../Assets/images/d3.png\")},\n\n// {\n//     title:'Be Productive',\n// description:'Fermentum posuere urna nec tincidunt praesent semper feugiat nibh. A arcu cursus vitae congue mauris. Nam at lectus urna duis convallis. Mauris rhoncus aenean vel elit scelerisque mauris.',\n// image :require(\"../../Assets/images/feature-icon-04.svg\")\n// },\n\n\n// {\n//     title:'Be Productive',\n// description:'Fermentum posuere urna nec tincidunt praesent semper feugiat nibh. A arcu cursus vitae congue mauris. Nam at lectus urna duis convallis. Mauris rhoncus aenean vel elit scelerisque mauris.' ,\n// image :require(\"../../Assets/images/feature-icon-05.svg\")},\n\n// {\n//     title:'Be Productive',\n// description:'Fermentum posuere urna nec tincidunt praesent semper feugiat nibh. A arcu cursus vitae congue mauris. Nam at lectus urna duis convallis. Mauris rhoncus aenean vel elit scelerisque mauris.' ,\n// image :require(\"../../Assets/images/feature-icon-06.svg\")},\n\n\n]\n\n\nconst mappedCard = array.map(( value ) => {\n\n    return  <Card title = { value.title }\n    description ={value.description}\n    image = {value.image}/>\n})\n   \n    return (\n        <section class=\"features section\">\n            <div class=\"container\">\n                <div class=\"features-inner section-inner has-bottom-divider\">\n                    <div style={{}} class=\"features-wrap\">\n                       {mappedCard}\n                    </div>\n                </div>\n            </div>\n        </section>\n\n    );\n}\n\nexport default Services;","import React from 'react';\n\n\nconst PricingHeading = (props) => {\n    return (\n        <div class=\"pricing-header text-center\">\n            <h2 class=\"section-title mt-0\">{props.title}</h2>\n            <p class=\"section-paragraph mb-0\">{props.description}</p>\n        </div>\n    );\n}\n\nexport default PricingHeading;","import React from 'react';\n\nconst PricingCard = (props) => {\n\n\n    let array = ['Become a freelancer or client', 'Post or find jobs',\n        'Create invoices after successful completion of project']\n\n    const mappedCard = array.map((value) => {\n\n        return <li>\n            <span> {value} </span>\n        </li>\n    })\n\n    return (\n        <div class=\"pricing-table-main\">\n            <div class=\"pricing-table-header pb-24\">\n                <div class=\"pricing-table-price\"><span class=\"pricing-table-price-currency h2\">{props.sign}</span><span class=\"pricing-table-price-amount h1\">{props.money}</span><span class=\"text-xs\">{props.month}</span></div>\n            </div>\n            <div class=\"pricing-table-features-title text-xs pt-24 pb-24\">{props.description}</div>\n            <ul class=\"pricing-table-features list-reset text-xs\">\n\n                {mappedCard}\n\n\n            </ul>\n        </div>\n    );\n}\n\nexport default PricingCard;","import React from 'react';\nimport PricingHeading from '../PricingHeading';\nimport PricingButton from '../PricingButton';\nimport PricingCard from '../PricingCard';\n\nconst Pricing = () =>\n{\n\nreturn(\n\n    <section class=\"pricing section\">\n    <div class=\"container-sm\">\n        <div class=\"pricing-inner section-inner\">\n            <PricingHeading title = \"Unlimited for all\"  \n            description = \"dLance does not take any commision from client or freelancers. Only the amount of gas fee is deducted for the completion of transaction\"/>\n            \n            <div class=\"pricing-tables-wrap\">\n                <div class=\"pricing-table\">\n                    <div class=\"pricing-table-inner is-revealing\">\n                        <PricingCard sign = \"\" money = \"\" month = \"\" description = \"What you will get\" />\n                        {/* <PricingButton title = \"Pre order now\"/> */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n\n);\n\n}\n\nexport default Pricing;","import React from 'react';\nimport Title from '../Title';\nimport Services from '../Services';\nimport Pricing from '../Pricing';\n// import Contact from '../Contact';\n\n\nconst MainBody = () => {\n    return (\n        <main>\n            <Title title=\"dLance\"\n                description=\"A blockchain based freelancing platform that gives freelancers 100% of what they earn\"\n                buttonText=\"get started\" />\n\n            <Services />\n            <Pricing />\n            {/* <Contact text = \"Still not convinced on buying?\"\n            buttonText = \"Get in touch\"/> */}\n        </main>\n    );\n}\nexport default MainBody;","import React from 'react';\n\nconst Footer = (props) => {\n\n    let array = ['Contact', 'About us']\n\n    const mappedCard = array.map((value) => {\n\n        return <li>\n            <a href=\"#\">{value}</a>\n        </li>\n    })\n\n    let list2 = [{\n        title: 'Facebook',\n        xml: 'http://www.w3.org/2000/svg',\n        path: 'M6.023 16L6 9H3V6h3V4c0-2.7 1.672-4 4.08-4 1.153 0 2.144.086 2.433.124v2.821h-1.67c-1.31 0-1.563.623-1.563 1.536V6H13l-1 3H9.28v7H6.023z'\n    },\n\n    {\n        title: 'Twitter',\n        xml: 'http://www.w3.org/2000/svg',\n        path: 'M16 3c-.6.3-1.2.4-1.9.5.7-.4 1.2-1 1.4-1.8-.6.4-1.3.6-2.1.8-.6-.6-1.5-1-2.4-1-1.7 0-3.2 1.5-3.2 3.3 0 .3 0 .5.1.7-2.7-.1-5.2-1.4-6.8-3.4-.3.5-.4 1-.4 1.7 0 1.1.6 2.1 1.5 2.7-.5 0-1-.2-1.5-.4C.7 7.7 1.8 9 3.3 9.3c-.3.1-.6.1-.9.1-.2 0-.4 0-.6-.1.4 1.3 1.6 2.3 3.1 2.3-1.1.9-2.5 1.4-4.1 1.4H0c1.5.9 3.2 1.5 5 1.5 6 0 9.3-5 9.3-9.3v-.4C15 4.3 15.6 3.7 16 3z'\n    },\n\n    {\n        title: 'Google',\n        xml: 'http://www.w3.org/2000/svg',\n        path: 'M7.9 7v2.4H12c-.2 1-1.2 3-4 3-2.4 0-4.3-2-4.3-4.4 0-2.4 2-4.4 4.3-4.4 1.4 0 2.3.6 2.8 1.1l1.9-1.8C11.5 1.7 9.9 1 8 1 4.1 1 1 4.1 1 8s3.1 7 7 7c4 0 6.7-2.8 6.7-6.8 0-.5 0-.8-.1-1.2H7.9z'\n    },\n    ]\n\n    const ListCard = list2.map((value) => {\n\n        return <li>\n            <a href=\"#\">\n                <span class=\"screen-reader-text\">{value.title}</span>\n                <svg width=\"16\" height=\"16\" xmlns={value.xml}>\n                    <path d={value.path} fill= \"white\" />\n                </svg>\n            </a>\n        </li>\n    })\n\n    return (\n\n        <footer class=\"site-footer\">\n            <div class=\"container\">\n                <div class=\"site-footer-inner\">\n                    <div class=\"brand footer-brand\">\n                        <a style={{width:\"10%\"}} href=\"#\">\n                            <img class=\"header-logo-image\" src={props.image} alt={props.alter} />\n                        </a>\n                    </div>\n\n                    <ul class=\"footer-links list-reset\">\n                        {mappedCard}\n                    </ul>\n\n                    <ul class=\"footer-social-links list-reset\">\n                       {ListCard}\n                    </ul>\n                    <div class=\"footer-copyright\">&copy; {props.copyright}</div>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport './style.css';\nimport Logo from '../../Assets/images/l1.png';\n\nimport HeaderImage from '../HeaderImage';\nimport MainBody from '../MainBody';\nimport Footer from'../Footer';\n\nclass Landingpage extends Component {\n\n\n\n\nrender(props){\n    console.log('checking props ',props)\n\n    return (\n\n        <body class=\"is-boxed has-animations\"  >\n            <div class=\"body-wrap\" >\n                <HeaderImage source = {Logo}/>\n                <MainBody/>\n                <Footer  image = {Logo} alter = \"Logo\" copyright = \"2022 dLance, all rights reserved\"/>\n            </div>\n        </body>\n\n    );\n}\n    \n}\n\nexport default  Landingpage;","import React, { Component } from 'react' \n\n\nclass Help extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n\n    _renderFreeLancer = () => {\n\n        return <>\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n                1.) Signup on dLance using your email address,\n                 pick a password of 8 in length and from the account type drop-drown, choose \"Freelancer\". \n                 Fill out the remaining information and signup.\n                \n            </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            2.) Log in to the dLance using your credentials and from the account type drown, choose\n\"Freelancer\".\n                \n            </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            3.) After logging in, you will see the Home of dashboard. Look at the top right corner, there is an option stating \"Enable Metamask\".\nYou need to enable the Metamask by clicking on it, a pop-up will appear which will ask the access to be given to dLance. Give the access \nand then go the profile section from the drawer. You will see your Metamask id has appeared at your profile. You need to click on the\nupdate button to save this Metamask id. ( Metamask is a chrome extension, which is used to develop our connection with the ethereum blockchain. )\n                \n            </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            4.) The drawer contains various options, we will go through them. Click on the \"View & Create Jobs\", you will see all the jobs listed down. Since you \nas a freelancer cannot create jobs, so no option for that. You can browse through the listed jobs, and upon finding the right job for you, click on the \napply button.\n                \n            </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            5.) Upon clicking, the request will be submitted to the Employer. You can view your applied jobs in the \"My Jobs\" section.\n                \n            </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            6.) If your request for the applied job is rejected, that job will disappear from your applied jobs section. If your request is accepted, you will see a \n\"Start Job\" button appear on the card. When you are ready to start this job, you have to click this button. This will update the job status and a \"Complete Job\" \nbutton will appear on the card. When you have completed the job, the status of the job will be updated.     \n            </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            7.) After completing the job, the employer will mark it done and the amount will be transfered to your account.    \n            </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            8.) To know more about dLance, click on the \"About Us\" section.\n            </p>\n\n        </>\n    }\n\n\n    _renderEmployer = () => {\n\n        return <>\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n                1.) Signup on dLance using your email address,\n                 pick a password of 8 in length and from the account type drop-drown, choose \"Employer\". \n                 Fill out the remaining information and signup.\n                \n            </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            2.) Log in to the dLance using your credentials and from the account type drown, choose\n\"Employer\".\n                \n            </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            3.) After logging in, you will see the Home of dashboard. Look at the top right corner, there is an option stating \"Enable Metamask\".\nYou need to enable the Metamask by clicking on it, a pop-up will appear which will ask the access to be given to dLance. Give the access \nand then go the profile section from the drawer. You will see your Metamask id has appeared at your profile. You need to click on the\nupdate button to save this Metamask id. ( Metamask is a chrome extension, which is used to develop our connection with the ethereum blockchain. )\n                \n            </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            4.) The drawer contains various options, we will go through them. Click on the \"View & Create Jobs\", you will see all the jobs listed down. Since you \nas a employer cannot apply for the jobs, so no option is visible for applying the jobs. You can browse through the listed jobs.\n                \n            </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            5.) You can create the job by clicking on the \"Create Job\" button and by filling in the appropriate informations and selecting the category, publish the job.\nThis job will appear in the \"View & Create Jobs\" section and \"Notifications\" section which contains all your posted jobs.  \n            </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            6.) If someone applies for your job, you will see the \"Accept\" or \"Decline\" button appear on the card under the \"Notifications\" section. Upon accepting the \nproposal, the \"Freelancer\" can start the job and upon marking it complete, you will be shown a \"Mark Done\" button. \n            </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            7.) Upon clicking on the \"Mark Done\" button, the amount will be deducted from your account and will be transferred to the \"Freelancer\".\n              </p>\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            8.) To know more about dLance, click on the \"About Us\" section.\n            </p>\n\n        </>\n    }\n\n\n\n    render() {\n\n\n        return (<div style={{paddingLeft: '5px', paddingRight: '5px'}}  >\n            <h4 style={{ color: '#000' }}>How to use dLance?</h4>\n\n            <h6 style={{ color: '#000', fontSize: '18px', fontWeight: '450', marginTop: '-1px' }}>Guidelines for freelancers:</h6>\n\n\n\n            {\n                this._renderFreeLancer()\n            }\n\n\n\n<h6 style={{ color: '#000', fontSize: '18px', fontWeight: '450', marginTop: '-1px' }}>Guidelines for employers:</h6>\n\n{\n    this._renderEmployer()\n}\n\n        </div>\n        )\n    }\n}\n\nexport default Help\n","export const URL = \"https://dlance-marketplace.herokuapp.com\"","import { URL } from \"./config\"\n\n\n\nexport const Api = {\n    post: ( data, endPoint, success, error ) => {\n        fetch(`${URL}${endPoint}`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data) \n        })\n        .then( response => response.json())\n        .then( result => { \n            return success( result )\n        })\n        .catch( err => {\n            return error( err ) \n            \n        })\n    },\n\n    get: (  endPoint, success, error ) => {\n        fetch(`${URL}${endPoint}`,{\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then( response => response.json())\n        .then( result => { \n           \n            return success( result )\n        })\n        .catch( err => {\n            \n            \n            return error( err ) \n            \n        })\n    }\n}\n","let data = \"\";\nexport function saveAddr(data){\n\tthis.data = data;\n}\n\nexport const smart_contract_address = '0xCf6347b0a0315589974522FE843046F4ef71C500'\n\nexport const smart_contract_ABI = [\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"_employer\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_freelancer\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_amount\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_job_id\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"_status\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"applyJob\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"_job_id\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"completeJob\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"_key\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getAll\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"employer\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"freelancer\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"job_id\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"status\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"tuple\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n]","import { Api } from \"../../API\"\nimport {saveAddr} from \"../../BlockChain/config\"\nconst Actions = {\n\n    Signup: (data, completed, failed) => {\n        // console.log(data)\n        return dispatch => {\n            dispatch({ type: 'START_LOADING' })\n\n            let userData = {\n                path: 'abc',\n                content: data\n            }\n\n            Api.post(userData, '/signup', success => {\n                dispatch({ type: 'STOP_LOADING' })\n                return completed(success)\n            }, error => {\n                dispatch({ type: 'STOP_LOADING' })\n                return failed(error)\n            })\n        }\n    },\n\n    Login: (data, completed, failed) => {\n// console.log(data)\n        return dispatch => {\n            dispatch({ type: 'START_LOADING' })\n\n\n            Api.post( data, '/signin', success => {\n                dispatch({ type: 'USER_INFO', payload: success.userdata })\n                return completed(success)\n            }, error => {\n                dispatch({ type: 'STOP_LOADING' })\n                return failed(error)\n            })\n        }\n    },\n\n    Clear: () => {\n        return dispatch => {\n            dispatch({ type: 'CLEAR' })\n\n\n        }\n    },\n\n    Update_Metamask: ( accountNo ) => {\n        return dispatch => {\n            dispatch({ type: 'UPDATE_META_MASK', payload: accountNo })\n\n\n        }\n    },\n\n    EditProfile: (data, completed, failed) => {\n\n        return dispatch => {\n            dispatch({ type: 'START_LOADING' })\n\n            let userData = {\n                path: 'abc',\n                content: data\n            }\n            Api.post(userData, '/editProfile', success => {\n                dispatch({ type: 'STOP_LOADING' })\n                Api.post(data, '/Profile', success => {\n                    dispatch({ type: 'UPDATE_USER_INFO', payload: success.userdata })\n                    saveAddr(data.accountNo)\n                }, error => {\n                    \n                })\n                return completed(success)\n            }, error => {\n                dispatch({ type: 'STOP_LOADING' })\n                return failed(error)\n            })\n        }\n    },\n \n    GetAllJobs: ( completed, failed) => {\n\n        return dispatch => { \n            \n            Api.get( '/allJobs', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    CreateJob: (data, completed, failed) => {\n\n        return dispatch => {  \n            Api.post(data, '/createJob', success => { \n                \n                return completed(success)\n            }, error => { \n                return failed(error)\n            })\n        }\n    },\n\n    applyJob: (data, completed, failed) => {\n\n        return dispatch => {  \n            Api.post(data, '/apply', success => { \n                \n                return completed(success)\n            }, error => { \n                return failed(error)\n            })\n        }\n    },\n\n    GetAppliedJobs: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/appliedJobs', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    startJob: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/startJob', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    completeJob: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/completeJob', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    getAllNotifs: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/notifications', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    declineJob: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/declineJob', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    acceptJob: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/acceptJob', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n    markCompleteJob: (data, completed, failed) => {\n\n        return dispatch => { \n            \n            Api.post( data, '/markCompleteJob', success => { \n               \n                return completed(success)\n            }, error => {\n                \n                return failed(error)\n            })\n        }\n    },\n\n}\n\nexport default Actions","import React, { Component } from 'react'\nimport './Styles.css'\nimport { TextField, Button } from '@material-ui/core';\nimport { Container, Row, Col } from 'react-grid-system';\nimport Actions from '../../Redux/Actions';\nimport { connect } from 'react-redux'\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\n \n\nclass Profile extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userInfo: this.props.Reducer.userInfo,\n            disabled: true\n        }\n    }\n\n   \n\n\n    _onChange = ( text, field ) => {\n        this.setState( prevState => ({\n            ...prevState,\n            userInfo: {\n                ...prevState.userInfo,\n                [field] : text\n            }\n        }))\n    }\n\n    _toggleEditable = () => {\n        this.setState({ disabled: !this.state.disabled })\n    }\n\n    _updateProfile = () => {\n\n        let data = {\n            first_name: this.state.userInfo.first_name,\n            last_name: this.state.userInfo.last_name,\n            email: this.state.userInfo.email,\n            username: this.state.userInfo.username,\n            account_type: this.state.userInfo.account_type,\n            accountNo: this.state.userInfo.accountNo == '' \n            ? this.props.Reducer.metamask_acc != '' ? this.props.Reducer.metamask_acc\n             : this.state.userInfo.accountNo : this.state.userInfo.accountNo \n        }\n\n        this.props.EditProfile( data, success => {\n\n            if (success.status == 'success') {\n                ToastsStore.success(success.message) \n              }\n              else {\n                ToastsStore.error(success.message)\n               \n              }\n        }, error => {\n            ToastsStore.error(error.message)\n        })\n    }\n\n    render() {\n        return (<Container fluid >\n      \n            <Row fluid>\n                <Col lg={2.5} sm={2.5} md={2.5}></Col>\n\n                <Col lg={3} sm={3} md={3}>\n                    <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.userInfo.first_name}\n                        label=\"First Name\" variant=\"outlined\" disabled={this.state.disabled}\n                         onChange={(e)=>this._onChange(e.target.value,'first_name')} />\n                </Col>\n\n                <Col lg={1} sm={1} md={1}></Col>\n\n\n\n                <Col lg={3} sm={3} md={3}>\n                    <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.userInfo.last_name}\n                        label=\"Last Name\" variant=\"outlined\" disabled={this.state.disabled}\n                        onChange={(e)=>this._onChange(e.target.value,'last_name')} />\n                </Col>\n\n                <Col lg={2.5} sm={2.5} md={2.5}></Col>\n            </Row>\n\n            <Row fluid style={{ marginTop: '20px' }}>\n                <Col lg={2.5} sm={2.5} md={2.5}></Col>\n\n                <Col lg={3} sm={3} md={3}>\n                    <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.userInfo.email}\n                        label=\"Email\" variant=\"outlined\" disabled />\n                </Col>\n\n                <Col lg={1} sm={1} md={1}></Col>\n\n\n\n                <Col lg={3} sm={3} md={3}>\n                    <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.userInfo.username}\n                        label=\"UserName\" variant=\"outlined\" disabled={this.state.disabled} \n                        onChange={(e)=>this._onChange(e.target.value,'username')} />\n                </Col>\n\n                <Col lg={2.5} sm={2.5} md={2.5}></Col>\n            </Row>\n\n            <Row fluid style={{ marginTop: '20px' }}>\n                <Col lg={2.5} sm={2.5} md={2.5}></Col>\n\n                <Col lg={3} sm={3} md={3}>\n                    <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.userInfo.account_type}\n                        label=\"Account Type\" variant=\"outlined\" disabled />\n                </Col>\n\n                <Col lg={1} sm={1} md={1}></Col>\n\n\n\n                <Col lg={3} sm={3} md={3}>\n                    <TextField id=\"outlined-basic\" className=\"inputStyle\" \n                    value={this.state.userInfo.accountNo == '' \n                    ? this.props.Reducer.metamask_acc != '' ? this.props.Reducer.metamask_acc\n                     : this.state.userInfo.accountNo : this.state.userInfo.accountNo }\n                        disabled label=\"Meta mask ID\" variant=\"outlined\" />\n                </Col>\n\n                <Col lg={2.5} sm={2.5} md={2.5}></Col>\n            </Row>\n\n            <Row fluid style={{ marginTop: '20px' }}>\n\n                <Col lg={5} sm={5} md={5}></Col>\n\n                <Col lg={3} sm={3} md={3}>\n                    <Button variant=\"contained\" color=\"primary\" \n                    onClick={ this.state.disabled ? this._toggleEditable : this._updateProfile} >\n                        \n                        {\n                             this.state.disabled ? \"Edit Profile\" : \"Update Profile\"\n                        }\n                    </Button>\n                </Col>\n\n                <Col lg={4} sm={4} md={4}></Col>\n\n\n            </Row>\n\n            {\n                this.state.disabled == false\n                    ? <Row fluid style={{ marginTop: '20px' }}>\n                        <Col lg={5.4} sm={5} md={5}></Col>\n\n                        <Col lg={2} sm={3} md={3}>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this._toggleEditable} >\n                                Cancel\n                            </Button>\n                        </Col>\n\n                        <Col lg={4.6} sm={4} md={4}></Col>\n\n\n                    </Row>\n                    : null\n            }\n\n<ToastsContainer store={ToastsStore} position={ToastsContainerPosition.BOTTOM_CENTER} />\n        </Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        EditProfile: (data, success, error) => dispatch(Actions.EditProfile(data, success, error)),\n    }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)\n","import React, { Component } from 'react'\nimport './Styles.css'\nimport Paper from '@material-ui/core/Paper';\nimport { TextField, Button } from '@material-ui/core';\nimport { connect } from 'react-redux'\nimport Actions from '../../Redux/Actions';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport Web3 from 'web3'\nimport { smart_contract_ABI, smart_contract_address } from '../../BlockChain/config'\n\nclass ViewJobCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n    }\n\n    _enableMetaMask = (data, success, error) => {\n        let web3;\n        let that = this\n\n        if (window.ethereum) {\n            web3 = new Web3(window.ethereum);\n            try {\n                window.ethereum.enable().then(function (d) {\n                    // User has allowed account access to DApp...\n                    // console.log('meta mask succ ', d[0])\n                    const dLance = new web3.eth.Contract(smart_contract_ABI, smart_contract_address)\n\n                    dLance.methods.applyJob(data.employer, data.freelancer, data.amount, data.job_id, data.status)\n                        .send({ from: d[0] })\n                        .once('receipt', (receipt) => {\n                            console.log(receipt)\n                            return success(true)\n                        })\n\n\n                })\n                    .catch(err => {\n                        console.log('meta mask err 1 ', err)\n                        ToastsStore.error('Meta mask authorization is required !')\n                        return error(false)\n\n                    })\n\n            } catch (e) {\n                // User has denied account access to DApp...\n                console.log('meta mask err ', e)\n                ToastsStore.error('Meta mask authorization is required !')\n                return error(false)\n\n            }\n        }\n        else {\n            alert('You have to install MetaMask !');\n            return error(false)\n        }\n    }\n\n    _onClickApply = () => {\n        let data = {\n            freelancer_email: this.props.Reducer.userInfo.email,\n            employer_email: this.props.jobDetails.email,\n            category: this.props.jobDetails.category,\n            job_id: this.props.jobDetails.job_id\n        }\n\n\n        this.props.applyJob(data, success => {\n            if (success.status == 'success') {\n                this.props.toggleLoading()\n                ToastsStore.success(success.message)\n            }\n            else {\n                this.props.toggleLoading()\n                ToastsStore.error(success.message)\n            }\n        }, error => {\n            this.props.toggleLoading()\n            ToastsStore.error(error.message)\n        })\n\n\n    }\n\n\n    _onClickStart = () => {\n        let data = {\n            freelancer_email: this.props.Reducer.userInfo.email,\n            email: this.props.jobDetails.email,\n            job_id: this.props.jobDetails.job_id\n        }\n\n        // let blockChain_data = {\n        //     employer: this.props.jobDetails.email,\n        //     freelancer: this.props.Reducer.userInfo.email,\n        //     amount: this.props.jobDetails.budget,\n        //     job_id: this.props.jobDetails.job_id,\n        //     status: \"started\"\n        // }\n\n        this.props.toggleLoading()\n        // this._enableMetaMask(blockChain_data, completed =>\n             \n\n            this.props.startJob(data, success => {\n                if (success.status == 'success') {\n                    this.props._reloadJobs()\n                }\n                else {\n                    this.props.toggleLoading()\n                }\n            }, error => {\n                this.props.toggleLoading()\n                ToastsStore.error(error.message)\n            })\n\n    }\n\n    _onClickComplete = () => {\n        let data = {\n            freelancer_email: this.props.Reducer.userInfo.email,\n            email: this.props.jobDetails.email,\n            job_id: this.props.jobDetails.job_id\n        }\n\n\n        this.props.toggleLoading()\n        this.props.completeJob(data, success => {\n            if (success.status == 'success') {\n                this.props._reloadJobs()\n            }\n            else {\n                this.props.toggleLoading()\n            }\n        }, error => {\n            this.props.toggleLoading()\n            ToastsStore.error(error.message)\n        })\n    }\n\n    _renderButtonSection = () => {\n        if (this.props.view == 'MyJobs')\n            return <div className=\"BtnContainer\" >\n                <p ><h6 className=\"textStyle\">Posted by: </h6>{this.props.jobDetails.email}</p>\n                {\n                    this.props.jobDetails.status == 'declined' || this.props.jobDetails.status == 'pending' || this.props.jobDetails.status == 'done'\n                        ? null\n                        : <Button variant=\"contained\" color=\"primary\"\n                            onClick={this.props.jobDetails.status == 'accepted'\n                                ? this._onClickStart : this.props.jobDetails.status == 'started' ? this._onClickComplete\n                                    : null\n                            }\n                        >\n\n                            {this.props.jobDetails.status == 'accepted' ? 'Start'\n                                : this.props.jobDetails.status == 'started' ? 'Complete' : null}\n                        </Button>\n                }\n\n            </div>\n        else\n            return <div className=\"BtnContainer\" >\n                <p ><h6 className=\"textStyle\">Posted by: </h6>{this.props.jobDetails.email}</p>\n                <Button variant=\"contained\" color=\"primary\"\n                    onClick={this._onClickApply} >\n                    Apply\n            </Button>\n            </div>\n    }\n\n    render() {\n\n        return (<Paper elevation={3} className=\"Container\" >\n            <div className=\"RowContainer\">\n                <p><h6 className=\"textStyle\">Category: </h6>{this.props.jobDetails.category}</p>\n                <p><h6 className=\"textStyle\">Budget: </h6>{this.props.jobDetails.budget}</p>\n            </div>\n\n            <div className=\"RowContainer\">\n                <p><h6 className=\"textStyle\">Duration: </h6>{this.props.jobDetails.duration}</p>\n                <p><h6 className=\"textStyle\">{this.props.view == 'MyJobs' ? 'Request status: ' : 'Status: '}</h6>{this.props.jobDetails.status}</p>\n            </div>\n\n            <div className=\"descriptionContainer\" >\n                <h6 className=\"textStyle\">Description: </h6>\n                <p className=\"description\">{this.props.jobDetails.description}</p>\n            </div>\n\n            {\n\n\n                this.props.Reducer.userInfo.account_type == 'Freelancer'\n                    ? this._renderButtonSection()\n                    : <div className=\"RowContainer\" >\n                        <div style={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            flexDirection: 'row',\n                            alignItems: 'center'\n                        }}>\n                            <h6 className=\"textStyle\" style={{marginRight: '4px'}} >Posted by: </h6> {this.props.jobDetails.email}</div>\n                    </div>\n            }\n\n\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.BOTTOM_CENTER} />\n        </Paper>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        applyJob: (data, success, error) => dispatch(Actions.applyJob(data, success, error)),\n        startJob: (data, success, error) => dispatch(Actions.startJob(data, success, error)),\n        completeJob: (data, success, error) => dispatch(Actions.completeJob(data, success, error)),\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewJobCard)\n","import React from 'react';\nimport { css } from '@emotion/core';\n// First way to import\nimport { GridLoader } from 'react-spinners';\n\n \nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n \nconst Loader = ( props ) => {\n\n    return (\n      <div className='sweet-loading'>\n        <GridLoader\n          css={override}\n          sizeUnit={\"px\"}\n          size={10}\n          color={'#54abe5'}\n          loading={props.loading}\n        />\n      </div> \n    )\n  }\n  export default Loader","import React, { Component } from 'react'\nimport './Styles.css'\nimport Paper from '@material-ui/core/Paper';\nimport { TextField, Button, InputLabel } from '@material-ui/core';\nimport { connect } from 'react-redux'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport Actions from '../../Redux/Actions';\n\nclass CreateJobCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            jobFields: {\n                category: '',\n                budget: '',\n                duration: '',\n                description: '',\n                email: this.props.Reducer.userInfo.email,\n                account_type: this.props.Reducer.userInfo.account_type,\n                status: 'newly arrived'\n            }\n        }\n    }\n\n    _onChange = (text, field) => {\n        this.setState(prevState => ({\n            ...prevState,\n            jobFields: {\n                ...prevState.jobFields,\n                [field]: text\n            }\n        }))\n    }\n\n    _handleCreateJob = () => {\n\n        let jobFields = this.state.jobFields\n\n        if (jobFields.description.trim() == '')\n            return ToastsStore.error('Please provide job description')\n\n        if (jobFields.duration.trim() == '')\n            return ToastsStore.error('Please provide job duration')\n\n        if (jobFields.budget.trim() == '')\n            return ToastsStore.error('Please provide job budget')\n\n        if (jobFields.category.trim() == '')\n            return ToastsStore.error('Please provide job category')\n\n\n        \n            this.props.toggleLoading()\n        this.props.CreateJob(this.state.jobFields, success => {\n            if (success.status == 'success') {\n                this.props.toggleLoading()\n                this.props.toggleShow()\n                ToastsStore.success(success.message) \n              }\n              else {\n                this.props.toggleLoading()\n                ToastsStore.error(success.message)\n               \n              }\n        }, error => {\n            this.props.toggleLoading()\n            ToastsStore.error(error.message)\n        })\n\n    }\n\n\n\n    render() {\n\n        return (<Paper elevation={3} className=\"Container\"   >\n\n            <div className=\"descContainer\" >\n                <h6 className=\"textStyle\">Create dLance Job</h6>\n            </div>\n\n\n            <div className=\"RowContainer\">\n                <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.jobFields.description}\n                    label=\"Description\" variant=\"outlined\" placeholder=\"Job description\" multiline={true} rowsMax={5}\n                    onChange={(e) => this._onChange(e.target.value, 'description')} fullWidth />\n\n            </div>\n\n            <div className=\"RowContainer\">\n                <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.jobFields.duration}\n                    label=\"Duration\" variant=\"outlined\" placeholder=\"2 months\"\n                    onChange={(e) => this._onChange(e.target.value, 'duration')}\n                    style={{ marginRight: '15px', marginTop: '20px' }}\n                />\n\n                <TextField id=\"outlined-basic\" className=\"inputStyle\" value={this.state.jobFields.budget}\n                    label=\"Budget\" variant=\"outlined\" disabled={this.state.disabled} placeholder=\"50$\"\n                    onChange={(e) => this._onChange(e.target.value, 'budget')}\n                    style={{ marginTop: '20px' }}\n                    />\n            </div>\n\n\n            <div className=\"RowContainer\" style={{marginTop: '5px'}}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">Select a category</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={this.state.jobFields.category}\n                        onChange={(e) => this._onChange(e.target.value, 'category')}\n                    >\n                        <MenuItem value={'mobile_app'}>Mobile App</MenuItem>\n                        <MenuItem value={'web_app'}>Web App</MenuItem>\n                    </Select>\n                </FormControl>\n\n            </div>\n\n            <div className=\"BtnContainer\" style={{\n                marginTop: '10px'\n            }}>\n                <Button variant=\"contained\" color=\"primary\" onClick={this._handleCreateJob} >Create Job</Button>\n            </div>\n\n            <div className=\"BtnContainer\" >\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.BOTTOM_CENTER} />\n            </div>\n           \n        </Paper>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        CreateJob: ( data,success, error) => dispatch(Actions.CreateJob(data,success, error)),\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateJobCard)\n","import React, { Component } from 'react'\nimport './Styles.css'\nimport ViewJobCard from '../ViewJobCard';\nimport { Container, Row, Col } from 'react-grid-system';\nimport Loader from '../Loader';\nimport Actions from '../../Redux/Actions';\nimport { connect } from 'react-redux'\nimport { TextField, Button } from '@material-ui/core';\nimport CreateJobCard from '../CreateJobCard';\n\nclass Jobs extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: false,\n            allJobs: [],\n\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true })\n        this.props.GetAllJobs(success => {\n            this.setState({ loading: false, allJobs: success.alljobs })\n        }, error => {\n            this.setState({ loading: false })\n        })\n    }\n\n    _renderAlljobs = () => {\n        return this.state.allJobs.map((job, index) => {\n            let _jobDetails = {\n                duration: job.duration,\n                budget: job.budget,\n                description: job.description,\n                category: job.category, \n                status: job.status,\n                job_id: job.job_id,\n                email: job.email\n            }\n\n            return <ViewJobCard jobDetails={_jobDetails}\n                toggleLoading={this._toggleLoading} />\n        })\n    }\n\n\n    _toggleLoading = () => {\n        this.setState({ loading: !this.state.loading })\n    }\n\n\n    _renderCreateJobs = () => {\n        return <Row >\n            <Col lg={3} sm={3} md={3}></Col>\n\n            <Col lg={6} sm={6} md={6} >\n                <CreateJobCard toggleLoading={this._toggleLoading} toggleShow={this.props.toggleShow} />\n            </Col>\n\n            <Col lg={3} sm={3} md={3}></Col>\n        </Row>\n\n    }\n\n\n\n    render() {\n        return (<Container >\n            <Loader loading={this.state.loading} />\n            {\n\n                this.props.show\n                    ? this._renderCreateJobs()\n                    : <Row >\n                        <Col lg={3} sm={3} md={3}></Col>\n\n                        <Col lg={6} sm={6} md={6}>\n                            {\n                                this.state.allJobs.length > 0\n                                    ? this._renderAlljobs()\n                                    : <p style={{ textAlign: 'center' }}>No new jobs</p>\n                            }\n                        </Col>\n\n                        <Col lg={3} sm={3} md={3}></Col>\n                    </Row>\n\n\n            }\n        </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        GetAllJobs: (success, error) => dispatch(Actions.GetAllJobs(success, error)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Jobs)\n","import React, { Component } from 'react'\nimport './Styles.css'\nimport ViewJobCard from '../ViewJobCard';\nimport { Container, Row, Col } from 'react-grid-system';\nimport Loader from '../Loader';\nimport Actions from '../../Redux/Actions';\nimport { connect } from 'react-redux' \n\nclass Jobs extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: false,\n            allJobs: [],\n\n        }\n    }\n\n    componentDidMount() {\n      \n       this._reloadJobs()\n    }\n\n    _reloadJobs = () => {\n        let data = {\n            freelancer_email: this.props.Reducer.userInfo.email\n        }\n        this.setState({ loading: true })\n        this.props.GetAppliedJobs( data, success => {\n            if(success.status == 'success')\n            this.setState({ loading: false, allJobs: success.message })\n            else\n            this.setState({loading: false})\n        }, error => {\n            this.setState({ loading: false })\n        })\n    }\n\n    _renderAlljobs = () => {\n\n        // console.log('jobsss ',this.state.allJobs)\n        return this.state.allJobs.map((job, index) => {\n            let _jobDetails = {\n                duration: job.duration,\n                budget: job.budget,\n                description: job.description,\n                category: job.category, \n                status: job.status,\n                job_id: job.job_id,\n                email: job.email\n            }\n\n            return <ViewJobCard jobDetails={_jobDetails} view='MyJobs' _reloadJobs={this._reloadJobs}\n                toggleLoading={this._toggleLoading} />\n        })\n    }\n\n\n    _toggleLoading = () => {\n        this.setState({ loading: !this.state.loading })\n    }\n \n\n\n    render() {\n        return (<Container >\n            <Loader loading={this.state.loading} />\n            {\n                <Row >\n                    <Col lg={3} sm={3} md={3}></Col>\n\n                    <Col lg={6} sm={6} md={6}>\n                        {\n                            this.state.allJobs.length > 0\n                                ? this._renderAlljobs()\n                                : <p style={{ textAlign: 'center' }}>Apply some jobs to see your jobs here</p>\n                        }\n                    </Col>\n\n                    <Col lg={3} sm={3} md={3}></Col>\n                </Row>\n\n\n            }\n        </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        GetAppliedJobs: (data,success, error) => dispatch(Actions.GetAppliedJobs(data,success, error)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Jobs)\n","import React, { Component } from 'react' \n\n\nclass AboutUs extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n\n \n\n    _renderDetails = () => {\n\n        return <>\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px', marginTop: '20px' }}>\nOur team consists of three final year computer science students, Muhammad Nabeel Khan, Muhammad Hazique Khatri and Zohaib Anwar from University of Karachi, Pakistan.\nWe developed this platform as our Internet Application Development project. According to proposal, we developed a decenterlized market place, peer-to-peer\nand a transparent platform which will benefit its users. dLance is built on top of Ethereum blockchain and IPFS. We have tried to use the best\n practices in developing this platform, still there is room for improvement. We welcome feedbacks to make this platform even more robust.\n</p>\n\n\n            <h6 style={{ color: '#000', fontSize: '18px', fontWeight: '450', marginTop: '-1px' }}>Our Mission:</h6>          \n\n\n\n            <p style={{ color: '#000', width: '80vw', fontSize: '16px' }}>\n            Our mission is to overcome the problems present in the current popular freelance platforms. In order to \n            solve the problems, we decided to present a distributed freelance platform, hence the name dLance. \n            The freelancer get the whole share of the work he has done without any deduction in the amount or any platform charges, except gas fee, which is\n             used to make a transaction. This gas fee is very low. The transactions are made transparent by \n             utilizing the ethereum blockchain. A smart contract lives on the blockchain, which takes care of the money and connection between the \n             freelancer and the employer. The whole platform is free of cost and no amount is charged at any point in the platform. We recommend to go through \n             the \"Help\" section to get the better understanding of dLance.\n            </p>\n\n        </>\n    }\n\n\n\n    render() {\n\n\n        return (<div style={{paddingLeft: '5px', paddingRight: '5px'}}  >\n            <h4 style={{ color: '#000' }}>About Team dLance</h4>\n \n\n\n{\n    this._renderDetails()\n}\n\n        </div>\n        )\n    }\n}\n\nexport default AboutUs\n","import React, { Component } from 'react'\nimport './Styles.css'\nimport Paper from '@material-ui/core/Paper';\nimport { TextField, Button } from '@material-ui/core';\nimport { connect } from 'react-redux'\nimport Actions from '../../Redux/Actions';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport Web3 from 'web3'\nimport { smart_contract_ABI, smart_contract_address } from '../../BlockChain/config'\n\nclass NotifCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n    }\n\n    _enableMetaMask = (data, success, error) => {\n        let web3;\n        let that = this\n\n        if (window.ethereum) {\n            web3 = new Web3(window.ethereum);\n            try {\n                window.ethereum.enable().then(function (d) {\n                    // User has allowed account access to DApp...\n                    // console.log('meta mask succ ', d[0])\n                    const dLance = new web3.eth.Contract(smart_contract_ABI, smart_contract_address)\n\n                    dLance.methods.completeJob(data)\n                    .send({ from: d[0] })\n                    .once('receipt', (receipt) => {\n                        console.log(receipt)\n                        return success(true)\n                })\n\n                  \n                })\n                    .catch(err => { \n                         console.log('meta mask err 1 ', err)\n                        ToastsStore.error('Meta mask authorization is required !')\n                        return error(false)\n                        \n                    })\n\n            } catch (e) {\n                // User has denied account access to DApp...\n                console.log('meta mask err ', e) \n                ToastsStore.error('Meta mask authorization is required !')\n                return error(false)\n                \n            }\n        }\n        else {\n            alert('You have to install MetaMask !');\n            return error(false)\n        }\n    }\n\n    _onMarkComplete = () => {\n        let data = {\n            freelancer_email: this.props.jobDetails.freelancer_email,\n            email: this.props.Reducer.userInfo.email,\n            job_id: this.props.jobDetails.job_id, \n        }\n\n        this.props.toggleLoading()\n        this._enableMetaMask(data.job_id,completed => {\n           \n            this.props.markCompleteJob(data, success => {\n                this.props._reloadJobs()\n            }, error => {\n                this.props.toggleLoading()\n                ToastsStore.error(error.message)\n            })\n        }, failed => {\n\n        })\n\n      \n    }\n\n\n    _onAccept = () => {\n        let data = {\n            freelancer_email: this.props.jobDetails.freelancer_email,\n            employer_email: this.props.Reducer.userInfo.email,\n            job_id: this.props.jobDetails.job_id,\n            notif_id: this.props.jobDetails.notif_id\n        }\n \n        this.props.toggleLoading()\n        this.props.acceptJob(data, success => {\n            this.props._reloadJobs()\n        }, error => {\n            this.props.toggleLoading()\n            ToastsStore.error(error.message)\n        })\n    }\n\n    _onDecline = () => {\n        let data = {\n            freelancer_email: this.props.jobDetails.freelancer_email,\n            employer_email: this.props.Reducer.userInfo.email,\n            job_id: this.props.jobDetails.job_id,\n            notif_id: this.props.jobDetails.notif_id\n        }\n \n        this.props.toggleLoading()\n        this.props.declineJob(data, success => {\n            this.props._reloadJobs()\n        }, error => {\n            this.props.toggleLoading()\n            ToastsStore.error(error.message)\n        })\n    }\n\n    _renderButtonSection = () => {\n        return <div className=\"BtnContainer\" >\n            <p ><h6 className=\"textStyle\" >Posted by: </h6>{this.props.jobDetails.email}</p>\n            {\n                this.props.jobDetails.status == 'pending'\n                    ? this._renderApprovalBtns()\n                    : this.props.jobDetails.status == 'completed'\n                        ? this._renderMarkDoneBtn()\n                        : null\n            }\n\n        </div>\n\n    }\n\n    _renderApprovalBtns = () => {\n        return <div><Button variant=\"contained\" color=\"primary\"\n            onClick={this._onDecline} style={{marginRight: '7px'}} >\n            Decline\n                        </Button>\n            <Button variant=\"contained\" color=\"primary\"\n                onClick={this._onAccept}  >\n                Accept\n                    </Button>\n        </div>\n    }\n\n    _renderMarkDoneBtn = () => {\n        return <Button variant=\"contained\" color=\"primary\"\n            onClick={this._onMarkComplete}  >\n            Done\n        </Button>\n\n    }\n\n    render() {\n\n        return (<Paper elevation={3} className=\"Container\" >\n\n            <div className=\"RowContainer\">\n                <p><h6 className=\"textStyle\">Job Request by: </h6>{this.props.jobDetails.freelancer_email}</p>\n                {/* <p><h6 className=\"textStyle\">Job Request by: </h6>{this.props.jobDetails[}</p> */}\n            </div>\n            <div className=\"RowContainer\">\n                <p>{this.props.jobDetails.message}</p>\n            </div>\n\n\n            <div className=\"RowContainer\">\n                <p><h6 className=\"textStyle\">Category: </h6>{this.props.jobDetails.category}</p>\n                <p><h6 className=\"textStyle\">Budget: </h6>{this.props.jobDetails.budget}</p>\n            </div>\n\n            <div className=\"RowContainer\">\n                <p><h6 className=\"textStyle\">Duration: </h6>{this.props.jobDetails.duration}</p>\n                <p><h6 className=\"textStyle\">{'Status: '}</h6>{this.props.jobDetails.status}</p>\n            </div>\n\n            <div className=\"descriptionContainer\" >\n                <h6 className=\"textStyle\">Description: </h6>\n                <p className=\"description\">{this.props.jobDetails.description}</p>\n            </div>\n\n            {\n                this._renderButtonSection()\n\n            }\n\n\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.BOTTOM_CENTER} />\n        </Paper>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        declineJob: (data, success, error) => dispatch(Actions.declineJob(data, success, error)),\n        acceptJob: (data, success, error) => dispatch(Actions.acceptJob(data, success, error)),\n        markCompleteJob: (data, success, error) => dispatch(Actions.markCompleteJob(data, success, error)),\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotifCard)\n","import React, { Component } from 'react'\nimport './Styles.css'\nimport ViewJobCard from '../ViewJobCard';\nimport { Container, Row, Col } from 'react-grid-system';\nimport Loader from '../Loader';\nimport Actions from '../../Redux/Actions';\nimport { connect } from 'react-redux'\nimport { TextField, Button } from '@material-ui/core';\nimport CreateJobCard from '../CreateJobCard';\nimport NotifCard from '../NotifCard';\n\nclass Notifications extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: false,\n            allJobs: [],\n\n        }\n    }\n\n    componentDidMount() {\n       this._getNotifs()\n    }\n\n    _getNotifs = () => {\n        let data = {\n            employer_email: this.props.Reducer.userInfo.email\n        }\n\n        this.setState({ loading: true })\n        this.props.getAllNotifs(data,success => {\n            // console.log(success)\n            if(success.status == 'success')\n            this.setState({ loading: false, allJobs: success.message })\n            else\n            this.setState({loading: false})\n        }, error => {\n            this.setState({ loading: false })\n        })\n    }\n\n    _renderAlljobs = () => {\n        return this.state.allJobs.map((job, index) => {\n            let _jobDetails = {\n                duration: job.duration,\n                budget: job.budget,\n                description: job.description,\n                category: job.category,\n                status: job.status,\n                job_id: job.job_id,\n                email: job.email,\n                freelancer_email: job.freelancer_email,\n                message: job.message,\n                notif_id: job.notif_id\n            }\n\n            return <NotifCard jobDetails={_jobDetails} _reloadJobs={this._getNotifs}\n                toggleLoading={this._toggleLoading} />\n        })\n    }\n\n\n    _toggleLoading = () => {\n        this.setState({ loading: !this.state.loading })\n    }\n\n \n\n\n    render() {\n        return (<Container >\n            <Loader loading={this.state.loading} />\n            {\n                <Row >\n                    <Col lg={3} sm={3} md={3}></Col>\n\n                    <Col lg={6} sm={6} md={6}>\n                        {\n                            this.state.allJobs.length > 0\n                                ? this._renderAlljobs()\n                                : <p style={{ textAlign: 'center' }}>No notifications</p>\n                        }\n                    </Col>\n\n                    <Col lg={3} sm={3} md={3}></Col>\n                </Row>\n\n\n            }\n        </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getAllNotifs: (data,success, error) => dispatch(Actions.getAllNotifs(data,success, error)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications)\n","import React, { Component } from 'react';\nimport Help from '../Help';\nimport Profile from '../Profile';\nimport Jobs from '../Jobs';\nimport MyJobs from '../MyJobs';\nimport AboutUs from '../AboutUs';\nimport Notifications from '../Notifications';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux'\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            show: false\n        }\n    }\n\n    handleClick = state => () => {\n        this.setState({ open: true, ...state });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    _renderContent = () => {\n\n        if (this.props.name == 'Profile')\n            return <Profile />\n\n        if (this.props.name == 'View & Create Jobs')\n            return <Jobs show={this.state.show} toggleShow={this._onToggle} />\n\n        if (this.props.name == 'My Jobs')\n            return <MyJobs />\n\n        if (this.props.name == 'Notifications')\n            return <Notifications />\n\n        if (this.props.name == 'Help')\n            return <Help />\n\n        if (this.props.name == 'About Us')\n            return <AboutUs />\n    }\n\n    _onToggle = () => {\n        this.setState({ show: !this.state.show })\n    }\n\n    _renderJobButton = () => {\n        if (this.props.Reducer.userInfo.account_type == 'Employer'\n            && this.props.name == 'View & Create Jobs') {\n            return <Button variant=\"contained\" color=\"primary\" onClick={this._onToggle}\n                style={{ height: '10%', marginLeft: '15px', marginTop: '10px' }} >\n                {this.state.show ? 'View Jobs' : 'Create Job'}\n            </Button>\n        }\n\n    }\n\n    render() {\n        return (\n            <main style={{ paddingTop: '20px' }}  >\n                <div style={{\n                    display: 'flex', flexDirection: 'row',\n                    alignItems: 'baseline', justifyContent: 'space-between', marginTop: '20px'\n                }} >\n                    <div style={{ display: 'flex', alignItems: 'baseline', marginLeft: '10px', flexDirection: 'row' }}>\n                        <h3 style={{ color: \"black\", fontWeight: 300 }}><strong>Home Page / </strong></h3>\n                        <h6 style={{ color: \"black\", fontWeight: 400 }}>{this.props.name}</h6>\n                    </div>\n                    {\n                        this._renderJobButton()\n                    }\n\n                </div>\n\n                {\n                    this._renderContent()\n                }\n\n            </main>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\n\n\nexport default connect(mapStateToProps, null)(Form)\n","import React from 'react';\nimport { List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport HomeIcon from '@material-ui/icons/HomeOutlined';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Profile from '@material-ui/icons/AccountCircleOutlined';\nimport Help from '@material-ui/icons/HelpOutline';\nimport AboutUs from '@material-ui/icons/InfoOutlined';\nimport WorkOutline from '@material-ui/icons/WorkOutline';\nimport MyJobs from '@material-ui/icons/Description';\nimport Notifications from '@material-ui/icons/NotificationsNone';\n\n\n\nimport { connect } from 'react-redux'\n\n\nclass ListElements extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n        }\n    }\n\n    render() {\n        return (\n            <List style={{ paddingTop: '0px', paddingBottom: '0px' }}>\n                <ListItem button style={{ marginLeft: '0px' }} onClick={() => this.props.handleClick()}>\n                    <ListItemIcon>\n                        <HomeIcon style={{ color: '#EA6A47' }} />\n                    </ListItemIcon>\n                    <ListItemText primary={'Home Page'} style={{ color: 'white', fontSize: 8 }} />\n                    {this.props.homeOPEN ? <ExpandLess style={{ color: 'white' }} /> : <ExpandMore style={{ color: '#EA6A47' }} />}\n                </ListItem>\n                {\n                    <Collapse in={this.props.homeOPEN} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <Divider />\n                            {\n                                this.props.Reducer.userInfo.account_type == 'Freelancer'\n                                    ? ['Profile', 'View & Create Jobs', 'My Jobs', 'About Us', 'Help']\n                                        .map((text, index) => (\n                                            <ListItem button key={text}\n                                                className={this.props.nested} onClick={() => this.props.clickFunction(text)}>\n                                                <ListItemIcon style={{ color: '#EA6A47' }}>\n                                                    {\n                                                            (index === 0) ? <Profile />\n                                                            : (index === 1) ? <WorkOutline />\n                                                            : (index === 2) ? <MyJobs />\n                                                            : (index === 3) ? <AboutUs />\n                                                            : (index === 4) ? <Help />\n                                                            : null\n                                }\n                                        </ListItemIcon>\n                                                <ListItemText primary={text} style={{ color: 'white', fontSize: 8 }} />\n                                            </ListItem>\n                                        ))\n\n                                    : ['Profile', 'View & Create Jobs', 'Notifications' ,'About Us', 'Help']\n                                        .map((text, index) => (\n                                            <ListItem button key={text}\n                                                className={this.props.nested} onClick={() => this.props.clickFunction(text)}>\n                                                <ListItemIcon style={{ color: '#EA6A47' }}>\n                                                    {\n                                                        (index === 0) ? <Profile />\n                                                            : (index === 1) ? <WorkOutline />\n                                                                : (index === 2) ? <Notifications />\n                                                                    : (index === 3) ? <AboutUs />\n                                                                        : (index === 4) ? <Help />\n                                                                            : null\n                                                    }\n                                                </ListItemIcon>\n                                                <ListItemText primary={text} style={{ color: 'white', fontSize: 8 }} />\n                                            </ListItem>\n                                        ))\n                            }\n                            <Divider />\n                        </List>\n                    </Collapse>\n                }\n            </List>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\n\n\nexport default connect(mapStateToProps, null)(ListElements)\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst drawerWidth = 0;\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      background:'white',\n      height:'100vh'\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n        \n      },\n    },\n    appBar: {\n      marginLeft: drawerWidth,\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n       \n      },\n      \n    },\n    menuButton: {\n      marginRight: 20,\n      [theme.breakpoints.up('sm')]: {\n        display: 'none',\n      },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth,\n      background: 'linear-gradient(  #0000, #0000 )',\n     \n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3,\n      display:'block',\n      justifyContent:'flex-start',\n      background:'white',\n    },\n    nested: {\n      paddingLeft: theme.spacing.unit * 4,\n    },\n  });\n  \n\nconst AppbarTop = (props) =>\n{\n\n const   {classes} = props;\n\n    return (\n    \n    <AppBar position=\"fixed\" className={classes.appBar} style={{\n      \n      backgroundColor:' #17202A'\n      \n      }}>\n      \n    <Toolbar style={{justifyContent:'center',\n      alignItems:'center',display:'flex', flexDirection:'row'}} >\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Open drawer\"\n        onClick={props.onClickEvent}\n        className={classes.menuButton}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" color=\"inherit\" noWrap  >\n       dLance\n         \n      </Typography>\n    \n    </Toolbar>\n\n   \n  </AppBar>);\n}\n\n// export default AppbarTop;\n\nAppbarTop.propTypes = {\n  \n    classes: PropTypes.object.isRequired,\n    container: PropTypes.object,\n    theme: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles, { withTheme: true })(AppbarTop);","import React from 'react';\nimport { css } from '@emotion/core';\n// First way to import\nimport { ScaleLoader } from 'react-spinners';\n\n \nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n \nclass AwesomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    }\n  }\n  render() {\n    return (\n      <div className='sweet-loading'>\n        <ScaleLoader\n          css={override}\n          sizeUnit={\"px\"}\n          size={50}\n          color={'#54abe5'}\n          loading={this.state.loading}\n        />\n      </div> \n    )\n  }\n}\nexport default AwesomeComponent;","import React from 'react';\nimport Spinner from '../Spinner';\nimport { withRouter } from 'react-router'\nimport { hslToRgb } from '@material-ui/core';\n\nconst HomePage = (props) => {\n  return (\n    <main  style={{paddingTop:'20px', background: \"linear-gradient(150deg, #2C3E50 30%, #000000 90%)\"}}> \n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end',marginTop:'50px' }}>\n      <p onClick={()=>props._enableMetaMask()}\n          style={{ color: '#E74C3C', textDecoration: 'underline', cursor: 'pointer', marginRight:'20px',fontWeight: 200 }}>\n            <strong>Enable Metamask</strong></p>\n\n        <p onClick={()=>props._onSignOut()}\n          style={{ color: '#E74C3C', textDecoration: 'underline', cursor: 'pointer', fontWeight: 200 }}>\n            <strong>Sign Out</strong></p>\n      </div>\n      <div style={{ textAlign: 'center' }} > \n        \n            <Spinner />\n            <h5 style={{ color: 'White', fontWeight: 200 }}>\n              <strong> Welcome To dLance, {props.username} 😃</strong>\n              </h5>\n       \n      </div>\n    </main>\n  );\n}\n\n \nexport default withRouter(HomePage);\n//rgba(254, 247, 102, 0.5)","import React from 'react'\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    background:'#cccc',\n    height:'100vh'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n      \n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n     \n    },\n  },\n  menuButton: {\n    marginRight: 0,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#17202A '\n    \n   \n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    display:'block',\n    justifyContent:'flex-start',\n    background:'white',\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n});\n\n\nconst NavbarDrawer = (props) =>\n{\n    const {classes, theme} = props;\n    \n    return(\n        <nav className={classes.drawer} >\n        \n        <Hidden smUp implementation=\"css\">\n      \n          <Drawer\n            container={props.Container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={props.openState}\n            onClose={props.onCloseDrawer}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n         \n          >\n      \n            { props.renderDrawer() }\n          </Drawer>\n        </Hidden>\n        \n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n         \n            variant=\"permanent\"\n            open\n          >\n             {  props.renderDrawer() }\n         \n          </Drawer>\n        </Hidden>\n       \n      </nav>\n    );\n}\n\n// export default NavbarDrawer;\nNavbarDrawer.propTypes = {\n  \n    classes: PropTypes.object.isRequired,\n    container: PropTypes.object,\n    theme: PropTypes.object.isRequired,\n  };\nexport default withStyles(styles, { withTheme: true })(NavbarDrawer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport { withStyles } from '@material-ui/core/styles';\nimport Form from '../Form';\nimport ListElements from '../ListElements';\nimport AppbarTop from '../AppbarTop';\nimport HomePage from '../HomePage';\nimport NavbarDrawer from '../NavbarDrawer';\nimport Actions from '../../Redux/Actions';\nimport { connect } from 'react-redux'\nimport ls from 'local-storage'\nimport Web3 from 'web3'\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\n \n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    background: 'white',\n    height: '100vh'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n\n    },\n\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    background: 'linear-gradient( #50c878,#5FB5A7 )',\n\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    display: 'block',\n    justifyContent: 'flex-start',\n    background: 'white',\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n});\n\nclass ResponsiveDrawer extends React.Component {\n  state = {\n    mobileOpen: false,\n    name: '',\n    loaded: false,\n    homeOPEN: false,\n  };\n\n  componentWillMount() {\n\n    if (!this.props.Reducer.userInfo) {\n      this.props.history.push('/dLance/signin')\n    }\n\n    if (this.props.Reducer.userInfo == null) {\n      this.props.history.push('/dLance/signin')\n    }\n  }\n\n_enableMetaMask = () => {\n  let web3;\n    let that = this\n\n    if (window.ethereum) {\n      web3 = new Web3(window.ethereum);\n      try {\n        window.ethereum.enable().then(function (d) {\n          // User has allowed account access to DApp...\n          // console.log('meta mask succ ', d[0])\n         that.props.Update_Metamask(d[0])\n         ToastsStore.success('Meta mask authorized successfully')\n        })\n        .catch(err => {\n          ToastsStore.error('Meta mask authorization is required !')\n          // console.log('meta mask err 1 ', err)\n        })\n        \n      } catch (e) {\n        // User has denied account access to DApp...\n        ToastsStore.error('Meta mask authorization is required !')\n        // console.log('meta mask err ', e) \n      }\n    } \n    else {\n      alert('You have to install MetaMask !');\n    }\n}\n\n  handleClick = () => {\n    this.setState({ homeOPEN: !this.state.homeOPEN })\n    this.setState({ name: '' });\n  }\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n\n  onButtonClick = (name) => {\n    this.setState({ name: name });\n  }\n\n  _renderDrawerContents = () => {\n    const { classes } = this.props;\n\n    return <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List style={{ paddingTop: '0px', paddingBottom: '0px' }}>\n        <ListElements nested={classes.nested}\n          clickFunction={this.onButtonClick}\n          handleClick={this.handleClick}\n          homeOPEN={this.state.homeOPEN} />\n      </List>\n      <Divider />\n    </div>\n  }\n\n  _renderPageContent = () => {\n\n    const { classes } = this.props;\n\n    return <Form inputheight={classes.input} homeOPEN={this.state.homeOPEN}\n      name={this.state.name}\n      onsignout={this._onSignOut} />\n  }\n\n  _onSignOut = () => {\n    // ls.set('userInfo',null)\n    this.props.Clear()\n    this.props.history.push('/dLance/signin')\n  }\n\n\n  render() {\n    const { classes } = this.props;\n\n\n    return (<div className={classes.root}>\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.BOTTOM_CENTER} />\n \n      <CssBaseline />\n      <AppbarTop classes={this.props} onClickEvent={this.handleDrawerToggle} />\n      <NavbarDrawer classes={this.props} Container={this.props.container} openState={this.state.mobileOpen} onCloseDrawer={this.handleDrawerToggle}\n        renderDrawer={this._renderDrawerContents} />\n      {\n        this.state.name !== ''\n          ? this._renderPageContent()\n          :\n          <HomePage classes={this.props} username={this.props.Reducer.userInfo.username} \n          _onSignOut={this._onSignOut} _enableMetaMask={this._enableMetaMask} />\n      }\n      \n\n    \n   </div>\n    );\n  }\n}\n\nResponsiveDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  container: PropTypes.object,\n  theme: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    Clear: () => dispatch(Actions.Clear()),\n    Update_Metamask: (accountNo) => dispatch(Actions.Update_Metamask(accountNo))\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ResponsiveDrawer))\n","import React from 'react'\nimport './style.css'\nimport { Container, Row, Col } from 'react-grid-system';\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css'\nimport { rgbToHex } from '@material-ui/core';\n\n\nclass AuthCard extends React.Component {\n\n    state = {\n        toggle: true\n    }\n\n    _setToggle = () => {\n        this.setState({ toggle: !this.state.toggle })\n    }\n\n    _handleKeyDown = (e, field) => {\n        if (e.key === 'Enter') {\n            if (field == 'signin') {\n                this.props.onLogin()\n            }\n            if (field == 'signup') {\n                this.props.onSignup()\n            }\n        }\n    }\n\n    _renderSignUp = () => {\n        return <div className='window animated slideInDown' style={{ width: '550px', height: '600px' }} >\n            <div className='content'>\n                <div className='welcome'>Hello There!</div>\n                <div className='subtitle'>To get started, please sign-up on dLance </div>\n                <div className='input-fields'>\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                        <input type='text' placeholder='First name' className='input-line full-width'\n                            value={this.props.signup_details.firstName} onChange={(e) => this.props.onChangeSignup(e, 'firstName')} ></input>\n                        <input type='text' placeholder='Last name' className='input-line full-width'\n                            value={this.props.signup_details.lastName} onChange={(e) => this.props.onChangeSignup(e, 'lastName')} ></input>\n                    </div>\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\" }}>\n                        <input type='email' placeholder='Email' className='input-line full-width'\n                            value={this.props.signup_details.email} onChange={(e) => this.props.onChangeSignup(e, 'email')} ></input>\n                        <input type='text' placeholder='Username' className='input-line full-width'\n                            value={this.props.signup_details.userName} onChange={(e) => this.props.onChangeSignup(e, 'userName')}></input>\n                    </div>\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\" }}>\n                        <input type='password' placeholder='Password' className='input-line full-width'\n                            value={this.props.signup_details.password} onChange={(e) => this.props.onChangeSignup(e, 'password')} ></input>\n                        <input type='password' placeholder='Confirm Password' className='input-line full-width'\n                            value={this.props.signup_details.confirmPassword} onChange={(e) => this.props.onChangeSignup(e, 'confirmPassword')}></input>\n                    </div>\n\n                    <div style={{ display: \"flex\", flexDirection: \"row\",marginTop: '5px',\n                    marginBottom: '5px' , paddingLeft: '25px', justifyContent: \"center\" }}>\n                        <Dropdown options={this.props.accountlist} value={this.props.signup_details.accountType}\n                            onChange={(option) => this.props._onSelect(option, 'signup')} placeholder=\"Select account type\" />\n                    </div>\n\n                </div>\n\n                <button className='ghost-round full-width' onClick={() => this.props.onSignup()}>Sign up</button>\n                <div className='subtitle'>Already a member?</div>\n                <button className='ghost-round full-width' onClick={() => this._setToggle()}>Sign in</button>\n            </div>\n        </div>\n    }\n\n    _renderSignIn = () => {\n        return <div className='window animated fadeInDown' style={{ height: '500px', width: '360px' }}>\n            <div className='content' >\n                <div className='welcome'>Hello There!</div>\n                <div className='subtitle'>Welcome back on dLance </div>\n                <div className='input-fields'style={{ paddingRight: '25px' }} >\n                    <input type='email' placeholder='Email' className='input-line full-width' \n                        value={this.props.login_details.email} onChange={(e) => this.props.onChangeLogin(e, 'email')} ></input>\n                    <input type='password' placeholder='Password' className='input-line full-width'\n                        value={this.props.login_details.password} onChange={(e) => this.props.onChangeLogin(e, 'password')}\n                        onKeyDown={(e) => this._handleKeyDown(e, 'signin')}\n                    ></input>\n\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\",\n                        marginTop: '5px',marginBottom: '5px' , paddingLeft: '25px' }}>\n                        <Dropdown options={this.props.accountlist} value={this.props.login_details.accountType}\n                            onChange={(option) => this.props._onSelect(option, 'signin')} placeholder=\"Select account type\" />\n                    </div>\n                </div>\n                <button className='ghost-round full-width' onClick={() => this.props.onLogin()}>Sign in</button>\n                <div className='subtitle'>Don't have an account?</div>\n                <button className='ghost-round full-width' onClick={() => this._setToggle()} >Create Account</button>\n            </div>\n        </div>\n    }\n\n    render() {\n        return (\n            <Container className='row_background'  fluid style={{ height: '100%' }} >\n                <Row style={{ height: '100%' }} fluid>\n                    <Col lg={3} sm={3} md={3}></Col>\n\n                    <Col lg={6} sm={6} md={6}>\n                        <div className='container1'>\n\n                            {\n                                this.state.toggle\n                                    ? this._renderSignIn()\n                                    : this._renderSignUp()\n                            }\n\n                        </div>\n                    </Col>\n\n                    <Col lg={3} sm={3} md={3}></Col>\n                </Row>\n\n            </Container>\n        );\n    }\n\n}\n\nexport default AuthCard","import React from 'react';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport AuthCard from '../AuthCard'\nimport Actions from '../../Redux/Actions';\nimport { connect } from 'react-redux'\nimport ls from 'local-storage'\n\nclass SigninForm extends React.Component {\n\n  constructor() {\n\n    super()\n    this.state = {\n      flag: false,\n      accountlist: ['Freelancer', 'Employer'],\n\n      login_details: {\n        email: '',\n        password: '',\n        accountType: ''\n      },\n\n      signup_details: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        userName: '',\n        password: '',\n        confirmPassword: '',\n        accountType: ''\n\n\n      }\n    }\n\n    this.testEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n  }\n\n  onChangeLogin = (event, field) => {\n    let text = ''\n\n    if (field == 'accountType')\n      text = event\n    else\n      text = event.target.value\n\n    this.setState(prevState => ({\n      login_details: {\n        ...prevState.login_details,\n        [field]: text\n      }\n    }))\n  }\n\n  onChangeSignup = (event, field) => {\n\n    let text = ''\n\n    if (field == 'accountType')\n      text = event\n    else\n      text = event.target.value\n\n    this.setState(prevState => ({\n      signup_details: {\n        ...prevState.signup_details,\n        [field]: text\n      }\n    }))\n  }\n\n  onLogin = () => {\n\n\n    if (this.state.login_details.email.trim() == '')\n      return ToastsStore.error(\"Please fill out email field\")\n\n\n    if (!this.testEmail.test(this.state.login_details.email))\n      return ToastsStore.error('Please enter a valid email address')\n\n    if (this.state.login_details.password.trim() == '')\n      return ToastsStore.error('Please fill out password field')\n\n    if (this.state.login_details.password.length < 8)\n      return ToastsStore.error('Password length should be 8 or greater')\n\n    if (this.state.login_details.accountType.trim() == '')\n      return ToastsStore.error('Please select an account type')\n\n\n      let loginData = { \n        email: this.state.login_details.email, \n        account_type: this.state.login_details.accountType,\n        password: this.state.login_details.password,\n  \n      }\n  \n  \n      this.props.Login(loginData, success => {\n  \n  \n        if (success.status == 'success') {\n          ToastsStore.success(success.message)\n          ls.set('userInfo',success.userdata)\n          setTimeout(() => this.props.history.push('/dLance/Home'), 1300)\n        }\n        else {\n          ToastsStore.error(success.message)\n          setTimeout(() => this.props.history.push('/dLance/signin'), 1300)\n        }\n  \n  \n  \n      }, error => {\n  \n        ToastsStore.error(error.message)\n  \n      })\n  }\n\n  onSignup = () => {\n\n    if (this.state.signup_details.firstName.trim() == '')\n      return ToastsStore.error('Please fill out first name field')\n\n    if (this.state.signup_details.lastName.trim() == '')\n      return ToastsStore.error('Please fill out last name field')\n\n    if (this.state.signup_details.email.trim() == '')\n      return ToastsStore.error('Please fill out email field')\n\n    if (!this.testEmail.test(this.state.signup_details.email))\n      return ToastsStore.error('Please enter a valid email address')\n\n    if (this.state.signup_details.userName.trim() == '')\n      return ToastsStore.error('Please fill out username field')\n\n    if (this.state.signup_details.password.trim() == '')\n      return ToastsStore.error('Please fill out password field')\n\n    if (this.state.signup_details.password.length < 8)\n      return ToastsStore.error('Password length should be 8 or greater')\n\n    if (this.state.signup_details.confirmPassword.trim() == '')\n      return ToastsStore.error('Please fill out confirm password field')\n\n    if (this.state.signup_details.confirmPassword != this.state.signup_details.password)\n      return ToastsStore.error('Passwords do not match')\n\n    if (this.state.signup_details.accountType.trim() == '')\n      return ToastsStore.error('Please select an account type')\n\n    let signupData = {\n      first_name: this.state.signup_details.firstName,\n      last_name: this.state.signup_details.lastName,\n      email: this.state.signup_details.email,\n      username: this.state.signup_details.userName,\n      password: this.state.signup_details.password,\n      account_type: this.state.signup_details.accountType,\n      accountNo: ''\n\n    }\n\n\n    this.props.Signup(signupData, success => {\n\n\n      if (success.status == 'success') {\n        ToastsStore.success(success.message)\n        setTimeout(() => this.props.history.push('/dLance/signin'), 1300)\n      }\n      else {\n        ToastsStore.error(success.message)\n        setTimeout(() => this.props.history.push('/dLance/signin'), 1300)\n      }\n\n\n\n    }, error => {\n\n      ToastsStore.error(error.message)\n\n    })\n\n\n  }\n\n  _onSelect = (option, field) => {\n\n    if( field == 'signup')\n     this.onChangeSignup(option.label, 'accountType')\n    else\n    this.onChangeLogin(option.label, 'accountType')\n\n  }\n\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}><AuthCard\n        onLogin={this.onLogin} login_details={this.state.login_details}\n        signup_details={this.state.signup_details} onSignup={this.onSignup} accountlist={this.state.accountlist}\n        onChangeLogin={this.onChangeLogin} onChangeSignup={this.onChangeSignup} _onSelect={this._onSelect}\n      />\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.BOTTOM_CENTER} />\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    Signup: (data, success, error) => dispatch(Actions.Signup(data, success, error)),\n    Login: (data, success, error) => dispatch(Actions.Login(data, success, error)),\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SigninForm);","import React from 'react';\nimport { ToastsStore } from 'react-toasts';\nimport ResponsiveDrawer from '../ResponsiveDrawer'\nimport SigninForm from '../SigninForm';\nimport Routing from '../../App';\nimport { Route, Link, BrowserRouter as Router ,Switch} from 'react-router-dom'\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      success: false,\n      failed: false,\n    };\n  }\n\n  onsignout = () => {\n    this.setState({ success: false });\n    this.setState({ email: '', password: '' });\n  }\n\n  buttonsubmit = () => {\n    if ('admin' === this.state.email && '123' === this.state.password) {\n\n      this.setState({ success: true });\n    }\n    else {\n      ToastsStore.error(\"UserName or Password doesn't match !\");\n      this.setState({ failed: true });\n    }\n  }\n\n  onEmail = (event) => {\n    this.setState({ email: event.target.value });\n  }\n\n  onPassword = (event) => {\n    this.setState({ password: event.target.value });\n  }\n\n  render() {\n    return (\n      <div style={{\n        background: \"#242830\",\n        height: '100vh'\n      }}>\n\n\n{this.props.children}\n\n        {/* {\n          (this.state.success === false)\n            ?\n            <SigninForm classes={this.props} onEmailChange={this.onEmail} onPasswordChange={this.onPassword} onSubmit={this.buttonsubmit} state={this.state.failed} />\n            : \n            <ResponsiveDrawer onsignout={this.onsignout} success={this.state.success} />\n        } */}\n      </div>\n    );\n  }\n}\n\nexport default SignIn;","import React from 'react';\nimport './App.css';\nimport './Animate.css'\nimport Landingpage from './Components/LandingPage';\nimport { connect } from 'react-redux';\nimport { Route, Link, HashRouter as Router, Switch } from 'react-router-dom'\nimport Dashboard from './Components/Dashboard';\nimport SigninForm from './Components/SigninForm';\nimport ResponsiveDrawer from './Components/ResponsiveDrawer';\nimport LoadingOverlay from 'react-loading-overlay';\n\n\nconst Routing = (props) => { \n\n  return (<Router basename=\"/\" >\n    <Switch>\n    \n      <Route exact path=\"/\" component={Landingpage} />\n      <Route exact path=\"/dLance\" component={Landingpage} />\n      <LoadingOverlay\n      active={props.Reducer.loading}\n      spinner\n      text='Loading ...'\n      >\n      <Dashboard>\n        <Route component={({ match }) => {\n          return <div style={{height:'100%',width:'100%'}}>\n            <Route exact path=\"/dLance/signin\" component={SigninForm} />\n            <Route exact path=\"/dLance/home\" component={ResponsiveDrawer}\n            // render={(props) => <ResponsiveDrawer {...props} isAuthed={true} />}\n            />\n\n          </div>\n        }} />\n\n      </Dashboard>\n      </LoadingOverlay>\n    </Switch>\n  </Router>);\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\n\nexport default connect(mapStateToProps, null)(Routing);\n ","const INITIAL_STATE = {\n    loading: false,\n    userInfo: null,\n    metamask_acc: ''\n}\n\nexport const reducer = (state = INITIAL_STATE, action) => {\n\n    switch (action.type) {\n\n        case 'START_LOADING': {\n            return { ...state, loading: true }\n        }\n\n        case 'STOP_LOADING': {\n            return { ...state, loading: false }\n        }\n\n        case 'USER_INFO': {\n            return { ...state, userInfo: action.payload, loading: false }\n        }\n\n        case 'UPDATE_USER_INFO': {\n            return { ...state, userInfo: action.payload }\n        }\n\n        case 'UPDATE_META_MASK': {\n            return { ...state, metamask_acc: action.payload }\n        }\n\n        case 'CLEAR': {\n            return { ...state, userInfo: null, loading: false, metamask_acc: '' }\n        }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { reducer } from \"./reducer\";\n\nexport default combineReducers({\n    Reducer: reducer\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './Redux/Reducers'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' \nimport { PersistGate } from 'redux-persist/integration/react'\nimport * as serviceWorker from './serviceWorker';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n  }\n\n  const persistedReducer = persistReducer(persistConfig, reducer)\n\nconst store = createStore(persistedReducer, applyMiddleware(thunk));\n\nlet persistor = persistStore(store)\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n        <App />\n        </PersistGate>\n    </Provider>\n\n    ,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}